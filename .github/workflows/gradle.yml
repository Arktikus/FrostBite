# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  release:
    types: [created]
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        server-id: github
        settings-path: ${{ github.workspace }}
        
    - name: Grant execute permissions to gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Determine JAR file name
      id: jar-file
      run: |
        tag=$(echo "${{ github.ref }}" | awk -F/ '{print $NF}')
        echo "::set-output name=jar-file::$(find ./build/libs/ -name 'frostbite-${tag}.jar' -print -quit)"

    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/libs/frostbite-${{ steps.jar-file.outputs.jar-file }}
        asset_name: frostbite-${{ steps.jar-file.outputs.jar-file }}
        asset_content_type: application/java-archive
